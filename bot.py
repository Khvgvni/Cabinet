import logging
import csv
import os
import json
from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup,
    KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
)
from telegram.ext import (
    Application, CommandHandler, CallbackQueryHandler,
    MessageHandler, ConversationHandler, ContextTypes, filters
)

# üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = os.getenv("BOT_TOKEN") or "–¢–í–û–ô_–¢–û–ö–ï–ù"
GROUP_CHAT_ID = int(os.getenv("GROUP_CHAT_ID", "-1003014842866"))
PRIVACY_URL = "https://docs.google.com/document/d/19eJqUD_zbSmc7_ug07XXYr25cV4BATTqBQwgsgdGX0U/edit?usp=sharing"

# üìå –°—Å—ã–ª–∫–∏ –∏ –º–µ–¥–∏–∞
WEB_APP_URL = "https://khvgvni.github.io/Cabinet/"
ROUTE_IMG = "https://raw.githubusercontent.com/Khvgvni/Cabinet/68248242d6ba3a80bc1d2c5d86f4c003e4b18cfb/Road%20map.jpg"
INVITE_IMG = "https://raw.githubusercontent.com/Khvgvni/Cabinet/d3ef68f9ae102683d9c5c5dd797d163aa02c3566/Invitation.png"
DESTINATION = "–ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–∏–π –∫—Ä–∞–π, –ß–∏—Ç–∞, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è —É–ª–∏—Ü–∞, 15–ê"
END_LAT, END_LON = 52.033938, 113.500514  # –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã

# üìå –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# üìå –°–æ—Å—Ç–æ—è–Ω–∏—è
(
    REG_NAME, REG_PHONE,
    TABLE_NAME, TABLE_PHONE, TABLE_COMMENT,
    TEAM_NAME, TEAM_PHONE, TEAM_ROLE,
    WAITING_LOCATION
) = range(9)


# ---------- –£–¢–ò–õ–ò–¢–´ ----------
def nav_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])


# ---------- –°–¢–ê–†–¢ ----------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    kb = [
        [InlineKeyboardButton("üé≠ –ê—Ñ–∏—à–∞", callback_data="show_afisha")],
        [InlineKeyboardButton("üî∂ –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data="register")]
    ]
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç *Cabinet!* üéâ\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—è–¥—É—â–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö, "
        "–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª, –ø–æ–ª—É—á–∏—Ç—å –±–∏–ª–µ—Ç –∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.\n\n"
        "‚ú® –£ –Ω–∞—Å —Ç–∞–∫–∂–µ –µ—Å—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∫—Ä–∞—Å–∏–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.\n\n"
        f"–ü—Ä–æ—Ö–æ–¥—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å [–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏]({PRIVACY_URL})"
    )
    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(kb),
                                    parse_mode="Markdown", disable_web_page_preview=True)


# ---------- –ú–ï–ù–Æ ----------
async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("üé™ –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", url=WEB_APP_URL)],
        [InlineKeyboardButton("üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª", callback_data="book_table")],
        [InlineKeyboardButton("üöï –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏", callback_data="order_taxi")],
        [InlineKeyboardButton("üéü –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π", callback_data="invite")],
        [InlineKeyboardButton("üë• –•–æ—á—É –≤ –∫–æ–º–∞–Ω–¥—É", callback_data="join_team")],
        [InlineKeyboardButton("üé≠ –ê—Ñ–∏—à–∞", callback_data="show_afisha")]
    ])
    text = "üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    await update.message.reply_text(text, reply_markup=kb)


# ---------- –ë–†–û–ù–¨ ----------
async def book_table(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.callback_query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    return TABLE_NAME

async def table_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["table_name"] = update.message.text
    await update.message.reply_text("üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:")
    return TABLE_PHONE

async def table_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["table_phone"] = update.message.text
    await update.message.reply_text("üí¨ –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ - –Ω–µ—Ç):")
    return TABLE_COMMENT

async def table_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["table_comment"] = update.message.text

    msg = (
        f"üçΩ –ù–æ–≤–∞—è –±—Ä–æ–Ω—å!\n\n"
        f"üë§ {context.user_data['table_name']}\n"
        f"üìû {context.user_data['table_phone']}\n"
        f"üí¨ {context.user_data['table_comment']}"
    )
    await context.bot.send_message(chat_id=GROUP_CHAT_ID, text=msg)
    await update.message.reply_text("‚úÖ –£–≤–∞–∂–∞–µ–º—ã–π –≥–æ—Å—Ç—å, —Å—Ç–æ–ª –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω! –ñ–¥—ë–º –í–∞—Å!", reply_markup=nav_keyboard())
    return ConversationHandler.END


# ---------- WEBAPP –î–ê–ù–ù–´–ï ----------
async def handle_webapp(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        data = json.loads(update.message.web_app_data.data)
        logger.info(f"üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ WebApp: {data}")

        if data["type"] == "booking":
            msg = (
                f"üçΩ –ù–æ–≤–∞—è –±—Ä–æ–Ω—å (WebApp)!\n\n"
                f"üë§ –§–ò–û: {data.get('name')}\n"
                f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}"
            )
            await update.message.reply_text("‚úÖ –í–∞—à —Å—Ç–æ–ª –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω! –ñ–¥—ë–º –í–∞—Å!")
            await context.bot.send_message(chat_id=GROUP_CHAT_ID, text=msg)

        elif data["type"] == "team":
            msg = (
                f"üë• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É (WebApp)!\n\n"
                f"üë§ –§–ò–û: {data.get('name')}\n"
                f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}\n"
                f"üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å: {data.get('role')}"
            )
            await update.message.reply_text("‚úÖ –í —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!")
            await context.bot.send_message(chat_id=GROUP_CHAT_ID, text=msg)

        elif data["type"] == "invite":
            await update.message.reply_text("üéü –í–æ—Ç –≤–∞—à –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π!")
            await update.message.reply_photo(INVITE_IMG)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ web_app_data: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.")


# ---------- MAIN ----------
def main():
    app = Application.builder().token(TOKEN).build()

    # –ë—Ä–æ–Ω—å
    conv_table = ConversationHandler(
        entry_points=[CallbackQueryHandler(book_table, pattern="book_table")],
        states={
            TABLE_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_name)],
            TABLE_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_phone)],
            TABLE_COMMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_comment)],
        },
        fallbacks=[CommandHandler("cancel", start)],
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_table)
    app.add_handler(MessageHandler(filters.WEB_APP_DATA, handle_webapp))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()


if __name__ == "__main__":
    main()
